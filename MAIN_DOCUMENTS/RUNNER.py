
###################################################################
# THIS DOCUMENT INTRODUCTION
###################################################################

'''
THIS IS THE EXECUTING SCRIPT OF CT_TOFSEG.PY
PLEASE KEEP THEM IN THE SAME MAIN FOLDER
'''

# PURPOSE
# - find flowrate, radius, and velocity of any given vessel using 
#   only CT imaging (DICOM format) and predetermined pathlines.
# - view vessel tracing in 3D as you are moving through the vessel.
# - segment any bright locations on any ".gif" files.


# SETUP/INPUTS
# - CASE : name of the case the data corresponds to (ie. "CASE3", 
#          "CASE12") to be used in graph labeling.
# - CASE_FOLDER : folder path where all case information can be saved.
# - CT_IMAGES : folder path in which "Perfusion CT" images are found 
#               for the specific case.
# - CENTRELINES : folder in which ".pth" files generated by 
#                 "Simvascular" are found, titled appropriately*.
# - VESSEL : choice of vessel to execute on. must match existing 
#            ".pth" file and be titled appropriately*.


# SCRIPT INSTRUCTIONS
# 1.fill in required variables as outlined by "SETUP/INPUTS".
# 2.test to make sure DICOMs are unloaded in the correct order
#   (run the first "CT" function given below).
# 3.generate case folders for the vessel (run the second "CT" 
#   function given below). 
# 4.generate gifs along the chosen vessel for the case (run the 
#   third "CT" function given below). NEW FUNCTION* available for 
#   generating gifs for all vessels (fourth "CT" function given 
#   below: only run one between third and fourth).
# 5.perform segmentation for the chosen vessel following terminal 
#   prompts (run the fifth "CT" function given below).
# 6.follow the instructions given in the manual step.
# 7.use the TOF approach on generated TICs to find flowrates (run 
#   the final "CT" function given below).
# 8.view results (ie. radius, velocity, flowrate) for any given 
#   case and vessel in its own "RESULTS.txt" folder.
# - that's it! :D


# PRECAUTIONS*
# - titled appropriately* : there is a database of allowed vessels 
#   due to sizing choices (ie. AORTA/large, LIMA/small). appropriate 
#   names are "AORTA", "BCA", "LCC", "LSUB", "LIMA", "RA", "SVG1", 
#   "SVG2" currently. more names can be added as necessary.
# - NEW FUNCTION* : "create_slice_gifs_along_MANY_vessels" 
#   allows user to unload DICOM scans once (since this takes time) and 
#   create gifs for all vessels in one step. before use, all vessels in 
#   list "VESSELS" must have folders generated. after use, proceed to 
#   function "segment_all_slices_for_TICS" for all individual vessels. 
#   to unload singular vessels from the scan as shown in the video
#   "process_demonstration_video.mp4", use the previous function below 
#   "create_slice_gifs_along_vessel" as per usual.



###################################################################
# EXECUTING SCRIPT
###################################################################

CASE = "CASE1"
CASE_FOLDER = "/CASENUM"
CT_IMAGES = "/CTimages"
CENTRELINES = "/Paths"
VESSEL = "AORTA"


import CT_TOFseg as CT

# CT.check_perfusionCT_unloading(CT_IMAGES, CASE)

# CT.generate_case_folders(VESSEL, CASE_FOLDER)

# CT.create_slice_gifs_along_vessel(CASE, VESSEL, CASE_FOLDER, CT_IMAGES, CENTRELINES)
# VESSELS = ["AORTA","LIMA","SVG1"]
# CT.create_slice_gifs_along_MANY_vessels(CASE, VESSELS, CASE_FOLDER, CT_IMAGES, CENTRELINES)

# CT.segment_all_slices_for_TICS(CASE, VESSEL, CASE_FOLDER, CENTRELINES)

# MANUAL USER STEP
# - enter the given CASE_FOLDER. there should now be an internal 
#   folder called "VESSELrun". enter that folder as well.
# - in the folder titled "reds", view all contours.
# - manually remove contours (ie. delete, throw in trash) which 
#   are not representative of the vessel cross section over the 
#   time acquistion. use your own judgement! 

# CT.run_TOF_for_results(CASE, VESSEL, CASE_FOLDER, CENTRELINES)

